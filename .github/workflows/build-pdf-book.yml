name: Build PDF Book
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-pdf:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          
      - name: Generate SUMMARY.md
        run: python scripts/generate_summary.py
      
      # Cache Rust dependencies to speed up the build
      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      # Use custom strategy to build and copy PDF
      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: '0.4.34'
      
      - name: Install system dependencies (optimized)
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends chromium-browser wkhtmltopdf

      # Build HTML version first
      - name: Build HTML
        run: mdbook build
      
      # Use wkhtmltopdf as a faster alternative to mdbook-pdf
      - name: Generate PDF directly from HTML
        run: |
          # Create directory structure
          mkdir -p published_pdfs/$(date +%Y)/$(date +%m)
          
          # Combine HTML files into a single file for PDF
          echo "<html><head><title>WordPress Second Brain</title>" > combined.html
          echo "<style>$(cat theme/pdf.css)</style></head><body>" >> combined.html
          
          # Add TOC
          echo "<h1>Table of Contents</h1>" >> combined.html
          cat SUMMARY.md | sed 's/# Summary//g' | sed 's/\* \[\(.*\)\](\(.*\))/\<h2\>\1\<\/h2\>/g' >> combined.html
          
          # Add content
          find book -name "*.html" -not -path "*/search_index.json" -not -path "*/print.html" | sort | xargs cat | grep -v "<head" | grep -v "<html" | grep -v "</html" | grep -v "<link" | grep -v "<script" >> combined.html
          
          echo "</body></html>" >> combined.html
          
          # Generate PDF
          wkhtmltopdf --enable-local-file-access --quiet combined.html book.pdf
          
          # Copy to the organized structure
          cp book.pdf published_pdfs/$(date +%Y)/$(date +%m)/wordpress-second-brain_$(date +%Y-%m-%d)_v1.pdf
      
      - name: Upload PDF as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: book-pdf
          path: book.pdf
          if-no-files-found: warn
          
      - name: Upload Organized PDFs
        uses: actions/upload-artifact@v4
        with:
          name: published-pdfs
          path: published_pdfs
          if-no-files-found: warn
          
      # Using softprops/action-gh-release instead of deprecated create-release and upload-release-asset
      - name: Create Release and Upload PDF
        if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: Book Release v${{ github.run_number }}
          files: |
            ./book.pdf
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}